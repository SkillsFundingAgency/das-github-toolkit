<#
.SYNOPSIS
    A PowerShell function for enabling vulnerability alerts and automated security fixes.
.DESCRIPTION
    A PowerShell function for enabling vulnerability alerts and automated security fixes.
.PARAMETER GitHubOrg
    The name of the GitHub organisation
.PARAMETER RepoSearchString
    A search pattern for the repos to query.  The like comparison operator is used to match repos names so suffix any partial patterns with *
.EXAMPLE
    Set-GitHubSessionInformation -PatToken <not-a-real-pat-token>
    Set-GitHubAutomatedSecurityFixes -GitHubOrg MyGitHubOrg -RepoSearchString MyRepo
.NOTES
    Uses:
    https://docs.github.com/en/rest/reference/repos#enable-vulnerability-alerts
    https://docs.github.com/en/rest/reference/repos#enable-automated-security-fixes
    Vulnerbility alerts must be enabled before enabling automated security fixes
#>
function Set-GitHubRepoVulnerabilitySetting {
    [Diagnostics.CodeAnalysis.SuppressMessageAttribute("PSReviewUnusedParameter", "RepoSearchString", Justification = "False positive as rule does not know that Where-Object operates within the same scope")]
    [CmdletBinding(SupportsShouldProcess)]
    Param (
        [String]$GitHubOrg,
        [String]$RepoSearchString
    )

    $Uri = "/orgs/$GitHubOrg/repos?type=all"
    Write-Verbose "Searching org $GitHubOrg"
    $Repos = Invoke-GitHubRestMethod -Method GET -Uri $uri
    Write-Verbose -Message "Got $($Repos.Length) repositories"

    $MatchedRepos = $Repos | Where-Object {$_.name -like $RepoSearchString -and $_.archived -eq $false}

    foreach ($Repo in $MatchedRepos) {
        $Uri = "/repos/$GitHubOrg/$($Repo.name)/vulnerability-alerts"
        if ($PSCmdlet.ShouldProcess($Repo.name)) {
            Write-Host "Enabling vulnerability alerts for $($Repo.name)"
            Invoke-GitHubRestMethod -Method PUT -Uri $Uri
        }
        $Uri = "/repos/$GitHubOrg/$($Repo.name)/automated-security-fixes"
        if ($PSCmdlet.ShouldProcess($Repo.name)) {
            Write-Host "Enabling automated security fixes for $($Repo.name)"
            Invoke-GitHubRestMethod -Method PUT -Uri $Uri
        }
    }
}
